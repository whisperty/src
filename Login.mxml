<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:v="component.*"
				creationComplete="init()"
				layout="absolute">
	<mx:Style source="StreamProcess.css"/>
	<mx:Script>   
		<![CDATA[   
			import Pattern.AttributeModel;
			import Pattern.OperatorClass;
			import Pattern.PatternModel;
			
			import com.adobe.cairngorm.business.ServiceLocator;
			import com.adobe.serialization.json.*;
			
			import fileoperation.LoadFromFile;
			import fileoperation.SaveToFile;
			
			import flash.utils.setInterval;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Menu;
			import mx.managers.PopUpManager;
			import mx.messaging.ChannelSet;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.config.ServerConfig;
			import mx.rpc.AsyncResponder;
			import mx.rpc.AsyncToken;
			import mx.rpc.IResponder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.rpc.remoting.RemoteObject;
			
			import org.act.od.impl.business.BpelCreator;
			import org.act.od.impl.events.AccountEvent;
			import org.act.od.impl.figure.*;
			import org.act.od.impl.figure.ProcessFigure;
			import org.act.od.impl.model.*;
			import org.act.od.impl.model.OrDesignerModelLocator;

			[Bindable]
			public var serverAddr:String = "http://localhost:8080/fcl/streamnetwork-debug/settingfiles/";
			[Bindable]
			public var uploadURL:String = "http://localhost:8080/fcl/FileUploaded";
			[Bindable]
			public var downloadURL:String = serverAddr+"myresult.txt";
			public const xmlUrl:String = serverAddr+"UserInfo.xml";
			private var filename:String = serverAddr+"network1.xml";
			public const patternUrl:String = serverAddr+"Patterns.xml";
			public const operatorUrl:String =serverAddr+"Operators.xml";
			[Bindable]
			private var loginInfo:ArrayCollection; 
			[Bindable]
			public var cur:Boolean = false;
			
			private var curState:String="none";
			private const POPUP_OFFSET:int = 10;
			private var saveFile:SaveToFile = new SaveToFile();
			private var loadFromFile:LoadFromFile = new LoadFromFile();
			private var xmlFilter:FileFilter = new FileFilter("XMLs(*.xml)", "*.xml");
//			private var file:FileReferenceList = new FileReferenceList();
			private var f:FileReference = new FileReference();
			
			[Bindable]
			public var pms:ArrayCollection;
			[Bindable]
			public var cos:ArrayCollection;
			private var channelSet:ChannelSet = null;
			private function init():void
			{
				//Alert.show("ok!");
				loadInfo.send();
				getPatterns.send();
				getOperators.send();
			
			}
			
			
			private function patternResultHandler(event:ResultEvent):void
			{
				//Alert.show("ok!");
				var patternColl:XML = event.result as XML;
//				Alert.show(patternColl);
				loadFromFile.PatternsintoModel(patternColl);
				pms = loadFromFile.pms;				
			}
			
			private function operatorResultHandler(event:ResultEvent):void
			{
				var operatorColl:XML = event.result as XML;
				//Alert.show(operatorColl);
				loadFromFile.OperatorsintoModel(operatorColl);
				cos = loadFromFile.cos;
			}
			
			
			private function goLogin(e:Event):void{
				
//				var newEvent1:AccountEvent = new AccountEvent(AccountEvent.ADD);
//				newEvent1.strings = "This has been modified";
//				dispatchEvent(newEvent1);
				var loginStatus:Boolean = false;
				for(var i:int = 0; i<loginInfo.length; i++)
				{
					//fdsgfd
					
					if(username.text == loginInfo[i].username && userpwd.text == loginInfo[i].password)
					{
						loginStatus = true;
					}
				}
				if(loginStatus){
					this.currentState = "Entered";
				}
				else
					this.currentState = "";
			}   
			private function resultHandler(event:ResultEvent):void{   
				loginInfo = event.result.LoginInfo.Login;           
			}
			
			private function runNet():void
			{
				if(!checkNetwork())
					return;
				designer.ordesigner.editorChange2RunningState();
			
			}
			//added by ty 20130703
			private function checkNetwork():Boolean
			{
//				Alert.show("debug");
				var feModel:FigureEditorModel = OrDesignerModelLocator.getInstance().figureEditorNavigatorModel.activeFigureEditorModel;
				if(feModel.getPatModel() == null){
					Alert.show("网络模式未设置！");
					return false;
				}
				var _rootFig:IFigure = feModel.rootFigure;
				var _root:ProcessFigure = ProcessFigure(_rootFig);
				
				var i:int;
				for(i=0; i<_root.children.length; i++)
				{
					var operator:IFigure = IFigure(_root.children[i]);
					if(operator is Operatorow2Figure){
						if(!Operatorow2Figure(operator).isConfig()){
//							Alert.show("operator failure");
							return false;
						}
					}else if(operator is Startow2Figure){
						if(!Startow2Figure(operator).isConfig()){
//							Alert.show("start failure");
							return false;
						}
					}else if(operator is LinkFigure){
						if(!LinkFigure(operator).isConfig()){
//							Alert.show("link failure");
							return false;
						}
					}
					
					/*
					if(operator is Activityow2Figure && !AbstractFigure(operator).isConditionSet()){
						Alert.show(AbstractFigure(operator).figureName + "算子条件表达式未设置");
						return false;
					}*/
				}
				Alert.show("网络设置正确，请输入数据源文件");
				return true;
			}
			
			private function showWindow():void
			{
				f.browse([xmlFilter]); 
				f.addEventListener(Event.SELECT, onFileSelect); 
//				file.addEventListener(ProgressEvent.PROGRESS, progressHandle); 
				
			}
			private function onFileSelect(event:Event):void
			{
				f.load();
				f.addEventListener(Event.COMPLETE, completeHandle); 
			}
			
			private function completeHandle(event : Event) : void {
				cur = true;
				var data:XML = XML(f.data.toString());
				Alert.show("成功载入网络:"+f.name);
				loadFromFile.data=data;
				loadFromFile.filename=f.name;
				loadFromFile.patMods = pms;
				//this.currentState="Construct";
				loadFromFile.getNet();
			} 
			
			private function saveNet():void
			{
				saveFile.serverAddr = serverAddr;
				saveFile.saveNet();
			}
		
			private function debug():void
			{
				var data:String = '{"name":"zhanzhihu","age":"22","gender":"male"}'; 
				//com.adobe.serialization.json.JSON.decode(s);
				data = data.replace( /\s/g, '' );
				//var jd:JSONDecoder = new JSONDecoder(data, false);
				var json:Object = JSON.decode(data);
				Alert.show(json.name + "data");
				//var _network:RemoteObject;
				//_network = (ServiceLocator.getInstance().getRemoteObject("network"));
				
				/*var bpelCreator :BpelCreator = new BpelCreator();
				var newBPELText :String;
				var orDesModelLoc :OrDesignerModelLocator = OrDesignerModelLocator.getInstance();
				newBPELText = bpelCreator.outputInfo(ProcessFigure(orDesModelLoc.getFigureEditorNavigatorModel().activeFigureEditorModel.rootFigure) );
				*/
				//_network.init();
				//Alert.show("click");
				
				//_network.init("asdfasfd");
				/*var _selectNetwork:RemoteObject;
				_selectNetwork = (ServiceLocator.getInstance().getRemoteObject("selectNetwork"));
				_selectNetwork.check();
				Alert.show("double click");*/
			}
	
		]]>   
	</mx:Script>
	<rds:Services xmlns:rds="org.act.od.impl.business.*"/>

	<mx:states>
		<!--State1：Entered-->
		<mx:State name="Entered">
			<mx:AddChild position="lastChild">
				
				<mx:VBox height="100%" width="100%">
					<mx:ApplicationControlBar width="100%" height="50" dock="true" fontSize="15">
						<mx:Label text="数据流处理系统 |     欢迎您!"/>
						<mx:Label text="{username.text}"/>
						<mx:Spacer width="100%"/>
						<mx:Button id="exit" label="退出" click="this.currentState=''"/>
						
					</mx:ApplicationControlBar>
					<mx:HBox width="100%" height="100%" id="hbox1">
						<mx:VBox id="vbox1" width="175" height="100%" backgroundAlpha="0.2"
								 backgroundColor="#bde0f3" fontSize="20" fontWeight="bold">
							<mx:Button click="this.currentState='Entered'" styleName="home" width="100%"/>
							<mx:Button click="this.currentState='Construct'" styleName="construct" width="100%"/>
							<mx:Button click="saveNet()" styleName="save" width="100%" id="saveNetButton" enabled="false"/>
							<mx:Button id="button1" width="100%" click="this.currentState='Construct';showWindow();" styleName="load"/>
							<mx:Button click="runNet()" styleName="run" width="100%" id="runNetButton" enabled="false"/>
							<mx:Button click="this.currentState='Option'" styleName="option" width="100%"/>
							<!--<mx:Button click="this.currentState='Operator'" styleName="operator" width="100%"/>-->
						</mx:VBox>
						<v:Homepage id="homepage" width="100%" height="100%"/>	
					</mx:HBox>
					<mx:HBox width="100%" height="26" fontSize="15" color="#F8FCFD">
						<mx:Label text="数据流处理系统"/>
						<mx:Spacer width="100%"/>
						<mx:Label text="(c) 2013 China Mobile"/>
					</mx:HBox>
					
				</mx:VBox>
			</mx:AddChild>
			<!--<mx:SetProperty target="{image1}" name="source" value="img/back2.jpg"/>-->
			<mx:SetProperty target="{loginCanvas}" name="visible" value="false"/>
		</mx:State>
		
		<!--State2:Exit-->
		<mx:State name="Exited">
			<mx:AddChild position="lastChild">
				<mx:HBox width="247" height="34" verticalCenter="0" horizontalCenter="0">
					<mx:Label text="您已退出系统" fontSize="23"/>
					<mx:Button label="重新登录" width="87" height="31" alpha="0.32" fontSize="14" cornerRadius="8" click="this.currentState=''"/>
				</mx:HBox>
			</mx:AddChild>
			<mx:SetProperty target="{image1}" name="source" value="img/back3.jpg"/>
		</mx:State>
		
		<!--State3:Construct-->
		<mx:State name="Construct" basedOn="Entered">
			<mx:RemoveChild target="{homepage}"/>
			<mx:AddChild relativeTo="{hbox1}" position="lastChild">
				<v:OrDesinger id="designer" cur="{cur}" pms="{pms}" cos="{cos}">
				</v:OrDesinger>
			</mx:AddChild>
			<mx:SetProperty target="{saveNetButton}" name="enabled" value="true"/>
			<mx:SetProperty target="{runNetButton}" name="enabled" value="true"/>
			
		</mx:State>
		
		<!--State4:Option-->
		<mx:State name="Option" basedOn="Entered">
			<mx:RemoveChild target="{homepage}"/>
			<mx:AddChild position="lastChild" relativeTo="{hbox1}">
				<mx:Canvas width="100%" height="100%" alpha="0.9">
					<v:Option width="80%" height="95%" alpha="0.8" borderStyle="outset"
							  cornerRadius="0" fontFamily="细明体" fontSize="10" horizontalCenter="0"
							  pms="{pms}" cos="{cos}" verticalCenter="0">
					</v:Option>
				</mx:Canvas>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:HTTPService id="loadInfo" url="{xmlUrl}" result="resultHandler(event)" /> 
	<mx:HTTPService id="getPatterns" url="{patternUrl}" result="patternResultHandler(event)" resultFormat="e4x"/>
	<mx:HTTPService id="getOperators" url="{operatorUrl}" result="operatorResultHandler(event)" resultFormat="e4x"/>
	
	<mx:Image width="100%" height="100%" scaleContent="true" autoLoad="true" maintainAspectRatio="false" id="image1" horizontalCenter="0" verticalCenter="-15">
		<mx:source>img/back1_new1.jpg</mx:source>
	</mx:Image>
	<mx:Canvas id="loginCanvas" width="700" height="450" alpha="1.0" cornerRadius="0"
			   horizontalCenter="0" verticalCenter="60">
		<mx:Image x="0" y="0" source="img/login1.png"/>
		<mx:Label x="322.5" y="71" color="#FFFFFF" fontSize="15" fontWeight="bold" text="用户登录"/>
		<mx:Label x="323.5" y="116" width="64" height="25" color="#FFFFFF" fontFamily="Arial"
				  fontSize="14" text="用户名："/>
		<mx:Label x="323.5" y="151" color="#FFFFFF" fontSize="12" text="密   码："/>
		<mx:TextInput x="386" y="115" id="username" fontSize="12" text="mobile" width="132"/>
		<mx:TextInput x="386.5" y="149" id="userpwd" fontSize="12" displayAsPassword="true" text="mobile" width="131.5"/>
		<mx:Button id="btn1" x="326.5" y="193" width="80" label="登录" alpha="1.0"
				   click="goLogin(event)" fontSize="12" fontWeight="normal"/>
		<mx:Button id="btn2" x="439" y="193" width="80" label="注册" fontSize="12" fontWeight="normal"/>
	</mx:Canvas>

</mx:Application>
